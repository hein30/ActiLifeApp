package views.data_panel.tabbedPane;

import java.awt.BorderLayout;
import java.awt.Dimension;
import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTextArea;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.tree.DefaultMutableTreeNode;
import models.GeneratedFileModel;
import models.ImportedData;
import utils.TreeModelBuilder;
import views.stlViewer.Java3DPreviewer;
import views.stlViewer.MacPreviewer;
import views.stlViewer.STLPreviewer;

public class GeneratedFilesPanel extends JPanel {

    /**
     * automatically generated by eclipse.
     */
    private static final long serialVersionUID = 4491905505931129624L;

    /**
     * contains file list pane in left, and detailsAndPreviewSplitPane in right.
     */
    private JSplitPane leftRightSplitPane;
    /**
     * contains scrollable text area at top, and preview panel at bottom.
     */
    private JSplitPane detailsAndPreviewSplitPane;

    private JScrollPane fileListPane;

    private JTextArea detailsTextArea;
    private STLPreviewer preview;

    public GeneratedFilesPanel() {
        setBorder(BorderFactory.createTitledBorder("Generated Files"));
        setLayout(new BorderLayout());

        final Dimension minSize = new Dimension(300, 200);

        fileListPane = new JScrollPane();
        fileListPane.setMinimumSize(minSize);
        fileListPane.setPreferredSize(minSize);

        detailsTextArea = new JTextArea("Select a file to view");
        detailsTextArea.setEditable(false);
        JScrollPane textScroll = new JScrollPane(detailsTextArea);
        textScroll.setBorder(BorderFactory.createTitledBorder("Details"));
        textScroll.setMinimumSize(minSize);

        setUpPreviewer();

        detailsAndPreviewSplitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT, textScroll, preview);
        detailsAndPreviewSplitPane.setOneTouchExpandable(true);
        detailsAndPreviewSplitPane.setMinimumSize(minSize);
        detailsAndPreviewSplitPane.setDividerLocation(0.5);

        leftRightSplitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, fileListPane, detailsAndPreviewSplitPane);
        leftRightSplitPane.setOneTouchExpandable(true);
        leftRightSplitPane.setDividerLocation(0.7);
        add(leftRightSplitPane, BorderLayout.CENTER);
    }

    private void setUpPreviewer() {
        if (System.getProperty("os.name").contains("Windows")) {
            preview = new Java3DPreviewer();
        } else {
            preview = new MacPreviewer();
        }

    }

    public void updateGeneratedFilesView(ImportedData importedData) {
        JTree tree = new JTree(TreeModelBuilder.buildTreeModel(importedData));

        tree.addTreeSelectionListener((TreeSelectionEvent e) -> {

            DefaultMutableTreeNode node = (DefaultMutableTreeNode)
                    tree.getLastSelectedPathComponent();

            if (!node.children().hasMoreElements()) {
                GeneratedFileModel fileModel = (GeneratedFileModel) node.getUserObject();
                if (fileModel.getFile() != null) {
                    detailsTextArea.setText(fileModel.getDetails());
                    detailsTextArea.setCaretPosition(0);
                    preview.loadFile(fileModel.getFile());
                }
            } else {
                detailsTextArea.setText("Select a file to view");
            }
        });

        fileListPane.setViewportView(tree);
    }
}
